AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tiny-url

  SAM Template for tiny-url backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Tracing: Active # Enable AWS X-Ray to help debug API requests
    Environment:
      Variables: # these will be important later
        DYNAMO_TABLE: !Select [1, !Split ["/", !GetAtt TinyUrlDynamo.Arn]]
        DB_ENDPOINT: http://dynamodb.ap-east-1.amazonaws.com
        REGION_NAME: ap-east-1

Parameters:
  Stage:
    Type: String
    Description: Deploying Environment (e.g. stage, prod)
    Default: prod
  HostedZoneId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: HostedZoneId value for application
    Default: "/applications/tinyurl/HostedZoneId"
  DomainCertificate:
    Type: AWS::SSM::Parameter::Value<String>
    Description: DomainCertificate value for application
    Default: "/applications/tinyurl/DomainCertificate"

Conditions:
  IsProd: !Equals [!Ref Stage, "prod"]

Resources:
  ApplicationsApi:
    Type: AWS::Serverless::Api
    Properties:
      # Use DefinitionBody for swagger file so that we can use CloudFormation intrinsic functions within the swagger file
      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: "../../swagger/openapi.yml"
      StageName: Prod
      TracingEnabled: true # Enable AWS X-Ray to help debug API requests
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information from requests and responses
          DataTraceEnabled: !If [IsProd, false, true]
          LoggingLevel: INFO
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApiAccessLogGroup}"
        Format: '$context.identity.sourceIp $context.authorizer.claims.sub [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.requestId $context.awsEndpointRequestId $context.xrayTraceId $context.responseLatency $context.integrationLatency "$context.error.message"'
      OpenApiVersion: "3.0.0"
      Cors:
        AllowHeaders: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
        AllowOrigin: "'*'"
        AllowMethods: "'GET,POST,OPTIONS'"
      Domain:
        CertificateArn: !Ref DomainCertificate
        DomainName: !If
          - IsProd
          - "s.tinyurl.tech"
          - "test.tinyurl.tech"
        EndpointConfiguration: "EDGE"
        Route53:
          HostedZoneId: !Ref HostedZoneId
          IpV6: true
  TinyUrlDynamo:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  GenerateTinyUrlFunction:
    Type: "AWS::Serverless::Function" # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ../../generate/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        GenerateTinyUrl:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref ApplicationsApi
            Path: /generate
            Method: post
      AutoPublishAlias: live
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref TinyUrlDynamo
        - CloudWatchPutMetricPolicy: {}
      DeploymentPreference:
        Enabled: true
        # Use AllAtOnce in non-production environment to accelerate deployment
        Type: !If [IsProd, Canary10Percent10Minutes, AllAtOnce]
        Alarms:
          - !Ref ApiGenerateAvailability
          - !Ref ApiGenerate4xxErrors
          - !Ref ApiGenerateLatencyP50
  GetTinyUrlFunction:
    Type: "AWS::Serverless::Function" # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ../../get/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        GetTinyUrl:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref ApplicationsApi
            Path: /{tinyId}
            Method: get
      AutoPublishAlias: live
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TinyUrlDynamo
        - CloudWatchPutMetricPolicy: {}
      DeploymentPreference:
        Enabled: true
        # Use AllAtOnce in non-production environment to accelerate deployment
        Type: !If [IsProd, Canary10Percent10Minutes, AllAtOnce]
        Alarms:
          - !Ref ApiGetAvailability
          - !Ref ApiGet4xxErrors
          - !Ref ApiGetLatencyP50
  # This role allows API Gateway to push execution and access logs to CloudWatch logs
  ApiGatewayPushToCloudWatchRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: "Push logs to CloudWatch logs from API Gateway"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
  ApiAccount:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayPushToCloudWatchRole.Arn
  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/AccessLog-${ApplicationsApi}
      RetentionInDays: 365

  # Alarms used in canary deployment for Applications API.
  ApiGenerateAvailability:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api availability is lower than 90%. Only used in canary deployment for Lambda ${GenerateTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: 5XXErrors
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Average
      Threshold: 0.1
      TreatMissingData: notBreaching
  ApiGenerate4xxErrors:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api 4xx Errors are more than 30%. Only used in canary deployment for Lambda ${GenerateTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: 4XXErrors
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Average
      Threshold: 0.3
      TreatMissingData: notBreaching
  ApiGenerateLatencyP50:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api latency p50 is too high. Only used in canary deployment for Lambda ${GenerateTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: Latency
      Namespace: AWS/ApiGateway
      Period: 60
      ExtendedStatistic: p50
      Threshold: 200
      TreatMissingData: notBreaching
  ApiGetAvailability:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api availability is lower than 90%. Only used in canary deployment for Lambda ${GetTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: 5XXErrors
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Average
      Threshold: 0.1
      TreatMissingData: notBreaching
  ApiGet4xxErrors:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api 4xx Errors are more than 30%. Only used in canary deployment for Lambda ${GetTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: 4XXErrors
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Average
      Threshold: 0.3
      TreatMissingData: notBreaching
  ApiGetLatencyP50:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      AlarmDescription: !Sub "Api latency p50 is too high. Only used in canary deployment for Lambda ${GetTinyUrlFunction}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiName
          Value: !Sub tinyurl-serverless-backend-${Stage}
      EvaluationPeriods: 5
      MetricName: Latency
      Namespace: AWS/ApiGateway
      Period: 60
      ExtendedStatistic: p50
      Threshold: 200
      TreatMissingData: notBreaching
  # Storing resources names to SSM
  TinyUrlDynamoTableName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/ddb/TinyUrlDynamo/TableName"
      Type: "String"
      Value: !Ref TinyUrlDynamo
      Description: "TinyUrlDynamo Table name"
  TinyUrlDynamoTableArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/ddb/TinyUrlDynamo/TableArn"
      Type: "String"
      Value: !GetAtt TinyUrlDynamo.Arn
      Description: "TinyUrlDynamo Table name"
  GenerateTinyUrlFunctionName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GenerateTinyUrlFunction/FunctionName"
      Type: "String"
      Value: !Ref GenerateTinyUrlFunction
      Description: "GenerateTinyUrlFunction function name"
  GenerateTinyUrlFunctionArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GenerateTinyUrlFunction/FunctionArn"
      Type: "String"
      Value: !Ref GenerateTinyUrlFunction
      Description: "GenerateTinyUrlFunction function ARN"
  GenerateTinyUrlFunctionVersion:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GenerateTinyUrlFunction/FunctionVersion"
      Type: "String"
      Value: !Ref GenerateTinyUrlFunction.Version
      Description: "GenerateTinyUrlFunction function version for alias live"
  GetTinyUrlFunctionName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GetTinyUrlFunction/FunctionName"
      Type: "String"
      Value: !Ref GetTinyUrlFunction
      Description: "GetTinyUrlFunction function name"
  GetTinyUrlFunctionArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GetTinyUrlFunction/FunctionArn"
      Type: "String"
      Value: !Ref GetTinyUrlFunction
      Description: "GetTinyUrlFunction function ARN"
  GetTinyUrlFunctionVersion:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/lambda/GetTinyUrlFunction/FunctionVersion"
      Type: "String"
      Value: !Ref GetTinyUrlFunction.Version
      Description: "GetTinyUrlFunction function version for alias live"
  ApiId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/apigateway/ApplicationsApi/Id"
      Type: "String"
      Value: !Ref ApplicationsApi
      Description: "ApplicationsApi Id"
  ApiEndpoint:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/apigateway/ApplicationsApi/Endpoint"
      Type: "String"
      Value:
        !If [
          IsProd,
          "s.tinyurl.tech",
          !Sub "https://${ApplicationsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod",
        ]
      Description: "ApplicationsApi endpoint"
  ApiAccessLogGroupName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName"
      Type: "String"
      Value: !Ref ApiAccessLogGroup
      Description: "ApplicationsApi access log CloudWatch log group name"
  ApiAccessLogGroupArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/tinyurl/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupArn"
      Type: "String"
      Value: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApiAccessLogGroup}"
      Description: "ApplicationsApi access log CloudWatch log group ARN"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GenerateTinyUrlFunction:
    Description: "Generate Tiny Url Lambda Function ARN"
    Value: !GetAtt GenerateTinyUrlFunction.Arn
  GenerateTinyUrlFunctionIamRole:
    Description: "Implicit IAM Role created for Generate Tiny Url function"
    Value: !GetAtt GenerateTinyUrlFunctionRole.Arn
  GetTinyUrlFunction:
    Description: "Get Tiny Url Lambda Function ARN"
    Value: !GetAtt GetTinyUrlFunction.Arn
  GetTinyUrlFunctionIamRole:
    Description: "Implicit IAM Role created for Get Tiny Url function"
    Value: !GetAtt GetTinyUrlFunctionRole.Arn
